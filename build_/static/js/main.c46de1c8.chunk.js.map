{"version":3,"sources":["reducers/postReducer.js","reducers/index.js","actions/types.js","store.js","components/design/Header.js","configuration/index.js","components/components/Posts.js","actions/postActions.js","components/design/Body.js","components/design/TextInputGroup.js","components/components/Add.js","components/design/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["initialState","posts","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","console","log","concat","toConsumableArray","middleware","thunk","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","apply","store","createStore","rootReducer","Header","react_default","a","createElement","className","style","backgroundColor","color","fontFamily","Component","Posts","_this$props$post","this","props","post","name","id","tags","content","date","time","map","tag","getPosts","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","res","wrap","_context","prev","next","axios","get","sent","data","stop","_x","Body","width","height","Link","to","components_Posts","key","connect","TextInputGroup","label","value","placeholder","onChange","error","htmlFor","classnames","is-invalid","rows","Add","errors","onSubmit","e","preventDefault","_this$state","_this","newTags","split","NewPost","Set","addPost","history","push","setState","defineProperty","target","_this$state2","marginTop","design_TextInputGroup","_ref2","_callee2","_context2","_x2","NotFound","App","es","BrowserRouter","design_Header","Switch","Route","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c46de1c8.chunk.js","sourcesContent":["import {GET_POSTS, ADD_POST} from '../actions/types'\r\n\r\nconst initialState = {\r\n\t posts:[]\r\n};\r\n\r\nexport default function (state = initialState, action){\r\n\tswitch(action.type){\r\n\t\tcase GET_POSTS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: action.payload\r\n\t\t\t}; \r\n\t\t\t// return {\r\n\t\t\t// \t...state\r\n\t\t\t// }\r\n\t\tcase ADD_POST:\r\n\t\t\tconsole.log(action.payload)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: [action.payload,...state.posts] \r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state; \r\n\t}\r\n}","import {combineReducers} from 'redux';\nimport postReducer from './postReducer'\n\n\nexport default combineReducers({\n\tposts: postReducer\n});","export const GET_POSTS = 'GET_POSTS';\r\nexport const ADD_POST = 'ADD_POST';","import {createStore, applyMiddleware,compose} from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\n// const initialState = { posts: [ {id : 1, name: \"Jeff\", tags: [ 'a', 'b' ], content: 'content', date: 'asdas', time: 'asdsa'} ] }; \r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n\twindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose; \r\n\r\nconst enhancer = composeEnhancers(\r\n\tapplyMiddleware(...middleware), \r\n)\r\n\r\n\r\nconst store = createStore (\r\n\trootReducer,\r\n\tinitialState,\r\n\tenhancer\r\n);\r\n\r\nexport default store; ","import React, {Component} from 'react'\r\n\r\n\r\nimport { Title } from '../../configuration'\r\n\r\n\r\nclass Header extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"container fixed-top\">\r\n\t\t\t  <div className=\"card \" style = {{backgroundColor: '#b43b07'}}>\r\n\t\t\t  \t<div className=\"card-body\">\r\n\t\t\t  \t\t<div className=\"row\">\r\n\t\t\t  \t\t    <div className=\"col-sm\">\r\n\t\t\t  \t\t    </div>\r\n\t\t\t  \t\t    <div className=\"col-sm\">\r\n\t\t\t  \t\t\t\t<h1 style = {{color: 'white', fontFamily: 'consolas'}}>{ Title }</h1>\r\n\t\t\t  \t\t    </div>\r\n\t\t\t  \t\t    <div className=\"col-sm\">\r\n\t\t\t  \t\t    </div>\r\n\t\t  \t\t    </div>\r\n\t\t\t  \t</div>\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Header; \r\n","export const Title = \"Freedom Wall\";  ","import React, { Component } from 'react';\r\n\r\nclass Posts extends Component {\r\n\r\n\trender() {\r\n\t\tconst {id, name, tags, content, date, time} = this.props.post;\r\n\t\treturn (\r\n\t\t\t  <div className=\"card\" >\r\n\t\t\t  \t<div className=\"card-header\" style = {{backgroundColor: '#e8dfc0'}}>\r\n\t\t\t  \t\t<h4><strong>Post from {name}</strong></h4>\r\n\t\t\t  \t\t<small>Tags: {tags.map(tag => <span>{tag} </span> )}   </small>\r\n\t\t\t  \t</div>\r\n\t\t\t  \t<div className=\"card-body\">\r\n\t\t\t  \t\t<p className = \"card-text\">{content}</p>\r\n\t\t\t  \t\t<footer className=\"blockquote-footer\"><small>{date} and {time} </small></footer>\r\n\t\t\t  \t</div>\r\n\t\t\t  </div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Posts; \r\n","import {GET_POSTS, ADD_POST} from './types';\r\nimport axios from 'axios'; \r\n\r\n\r\n// thunk version \r\n\r\nexport const getPosts = () => async dispatch => {\r\n\t// const res = await axios.get('https://api.myjson.com/bins/14s23y');  // joseph\r\n\t// const res = await axios.get('https://api.myjson.com/bins/1dzujy'); \r\n\tconst res = await axios.get('http://www.freedomwall.ga/index.php/fwall/post_list'); \r\n\tdispatch ({\r\n\t\ttype: GET_POSTS, \r\n\t\tpayload: res.data, \r\n\t})\r\n};\r\n\r\n// export const getPosts = () => {\r\n// \treturn {\r\n// \t\ttype: GET_POSTS\r\n// \t}\r\n// }\r\n\r\nexport const addPost = (post) => async dispatch => {\r\n\tconst res = await axios.post('http://www.freedomwall.ga/index.php/fwall/add_post/',{post});\r\n\t// axios.post('http://192.168.0.54/fwall/index.php/fwall/add_post/',{post})\r\n\t// .then(res => {\r\n\t// \tconsole.log(res); \r\n\t// \tconsole.log(res.data)\r\n\t// })\r\n\tdispatch ({\r\n\t\ttype: ADD_POST,\r\n\t\tpayload: res.data,\r\n\t})\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Posts from '../components/Posts'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { getPosts } from '../../actions/postActions'\r\n\r\nclass Body extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.getPosts();\r\n\t}\r\n\trender() {\r\n\t\tconst { posts } = this.props;\r\n\t\treturn (\r\n\t\t\t<div className = \"container\">\r\n\t\t\t\t<div style={{width : '100%', height: '95px'}}>\r\n\t\t\t\t    &nbsp;\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-sm-2\">\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Link to=\"/add\">  \r\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-outline-warning\">\r\n\t\t\t\t\t\t\t\tPost Here!\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t  \t\t    <div className=\"col-sm-8\">\r\n\t\t  \t\t    \t{posts.map(post => (\r\n\t\t  \t\t    \t\t<div>\r\n\t\t  \t\t    \t\t\t<br />\r\n\t\t  \t\t    \t\t\t<Posts key = {post.id} post = {post}  />\r\n\t\t  \t\t    \t\t</div>\r\n\t  \t\t    \t\t))}\r\n\t\t  \t\t    </div>\r\n\r\n\t\t  \t\t    <div className=\"col-sm-2\">\r\n\t\t  \t\t    </div>\r\n\t  \t\t    </div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nBody.propTypes = {\r\n\tposts: PropTypes.array.isRequired, \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tposts: state.posts.posts\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps,{getPosts})(Body)\r\n","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n\tlabel,\r\n\tname,\r\n\tvalue,\r\n\tplaceholder,\r\n\ttype,\r\n\tonChange,\r\n\terror\r\n}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{ (type === \"text\" ) ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label htmlFor = {name} > {label} </label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype = {type}\r\n\t\t\t\t\t\tname = {name}\r\n\t\t\t\t\t\tclassName = {classnames('form-control form-control-lg',{\r\n\t\t\t\t\t\t\t'is-invalid': error\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\tplaceholder = {placeholder}\r\n\t\t\t\t\t\tvalue = {value}\r\n\t\t\t\t\t\tonChange = {onChange}\r\n\t\t\t\t\t />\r\n\t\t\t\t\t {error && <div className = \"invalid-feedback\"> {error} </div>}\r\n\t\t\t\t</div>\r\n\t\t\t) : \r\n\t\t\t\t(\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t  <label htmlFor=\"comment\">{name}:</label>\r\n\t\t\t\t\t  <textarea className=\"form-control\" rows=\"5\" name = {name} placeholder= {placeholder} onChange = {onChange}></textarea>\r\n\t\t\t\t\t</div> \r\n\t\t\t\t)\r\n\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default TextInputGroup; \r\n","import React, { Component } from 'react';\r\n\r\n\r\nimport TextInputGroup from '../design/TextInputGroup';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {addPost, getPosts} from '../../actions/postActions';\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Add extends Component {\r\n\tstate = {\r\n\t\tname : \"\",\r\n\t\ttags : \"\", \t\r\n\t\tcontent: \"\", \r\n\t\terrors: {}\r\n\t}\r\n\r\n\tonSubmit = (e) => { \r\n\t\te.preventDefault();\r\n\r\n\t\tconst {name , tags , content} = this.state; \r\n\t\tif(tags === \"\"){\r\n\t\t\treturn ; \r\n\t\t}\r\n\r\n\t\tif(content=== \"\"){\r\n\t\t\treturn ; \r\n\t\t}\r\n\r\n\t\tlet newTags = tags.split(\" \"); // split \r\n\t\tlet uniqueTags = [...new Set(newTags)]; \r\n\t\t\r\n\t\tconst NewPost = {\r\n\t\t\tname, \r\n\t\t\ttags : uniqueTags, \r\n\t\t\tcontent\r\n\t\t}\r\n\r\n\t\tthis.props.addPost(NewPost); \r\n\t\tthis.props.history.push('/');\r\n\t}\r\n\r\n\tonChange = e => this.setState({[e.target.name]: e.target.value});\r\n\r\n\trender() {\r\n\t\tconst {name, tags, content, errors} = this.state; \r\n\t\treturn (\r\n\t\t\t<div className = \"container\">\r\n\t\t\t\t<div style={{width : '100%', height: '95px'}}>\r\n\t\t\t\t&nbsp;\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-sm-2\">\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<Link to=\"/\">  \r\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-outline-warning\">\r\n\t\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t  \t\t    <div className=\"col-sm-8\">\r\n\t\t  \t\t    \t<div className = \"card\" style = {{marginTop : '10px'}}> \r\n\t\t  \t\t    \t\t<div className=\"card-header\" style = {{backgroundColor: '#e8dfc0'}}>\r\n\t\t  \t\t    \t\t\t<h4><strong>Add Post</strong></h4> \r\n\t\t  \t\t    \t\t</div>\r\n\t\t  \t\t    \t\t<div className = \"card-body\">\r\n\t\t  \t\t    \t\t\t<form onSubmit = {this.onSubmit}>\r\n\t\t  \t\t    \t\t\t\t<TextInputGroup\r\n\t\t  \t\t    \t\t\t\t\tlabel = \"Name\"\r\n\t\t  \t\t    \t\t\t\t\tname = \"name\"\r\n\t\t  \t\t    \t\t\t\t\tplaceholder = \"Enter name\"\r\n\t\t  \t\t    \t\t\t\t\tvalue = {name}\r\n\t\t  \t\t    \t\t\t\t\tonChange = {this.onChange}\r\n\t\t  \t\t    \t\t\t\t\terror = {errors.name}\r\n\t\t  \t\t    \t\t\t\t\ttype = \"text\"\r\n\t  \t\t    \t\t\t\t    />\r\n\t  \t\t    \t\t\t\t    <TextInputGroup\r\n\t\t  \t\t    \t\t\t\t\tlabel = \"Tag\"\r\n\t\t  \t\t    \t\t\t\t\tname = \"tags\"\r\n\t\t  \t\t    \t\t\t\t\tplaceholder = \"Enter tags (separate with space e.g post blog)\"\r\n\t\t  \t\t    \t\t\t\t\tvalue = {tags}\r\n\t\t  \t\t    \t\t\t\t\tonChange = {this.onChange}\r\n\t\t  \t\t    \t\t\t\t\terror = {errors.tag}\r\n\t\t  \t\t    \t\t\t\t\ttype = \"text\"\r\n\t  \t\t    \t\t\t\t    />\r\n\t  \t\t    \t\t\t\t    <TextInputGroup\r\n\t\t  \t\t    \t\t\t\t\tlabel = \"Content\"\r\n\t\t  \t\t    \t\t\t\t\tname = \"content\"\r\n\t\t  \t\t    \t\t\t\t\tplaceholder = \"Enter content\"\r\n\t\t  \t\t    \t\t\t\t\tvalue = {content}\r\n\t\t  \t\t    \t\t\t\t\tonChange = {this.onChange}\r\n\t\t  \t\t    \t\t\t\t\terror = {errors.content}\r\n\t\t  \t\t    \t\t\t\t\ttype = \"textarea\"\r\n\t  \t\t    \t\t\t\t    />\r\n\t  \t\t    \t\t\t\t    <input \r\n\t  \t\t    \t\t\t\t    \ttype = \"submit\"\r\n\t  \t\t    \t\t\t\t    \tvalue = \"Add Post\"\r\n\t  \t\t    \t\t\t\t    \tclassName = \"btn btn-primary btn-block\"\r\n  \t\t    \t\t\t\t    \t/>\r\n\t\t  \t\t    \t\t\t</form>\r\n\t\t  \t\t    \t\t</div>\r\n\t\t  \t\t    \t\t\r\n\t\t  \t\t    \t</div>\r\n\t\t  \t\t    </div>\r\n\r\n\t\t  \t\t    <div className=\"col-sm-2\">\r\n\t\t  \t\t    </div>\r\n\t  \t\t    </div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// const mapDispatchToProps = () => {\r\n\t\r\n// }\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     addPost: contact => dispatch(addPost(contact)),\r\n//     getPosts: getPosts,\r\n//   }\r\n// };\r\n\r\nexport default connect(null,{addPost,getPosts})(Add)\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass NotFound extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className = \"container\">\r\n\t\t\t\t<br />\r\n\t\t\t\t<div style={{width : '100%', height: '95px'}}>\r\n\t\t\t\t    &nbsp;\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-sm-2\">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\r\n\t\t  \t\t    <div className=\"col-sm-8\">\r\n\t\t  \t\t    \t<div>\r\n\t\t\t\t\t\t\t<h1>404 Page Not Found</h1>\r\n\t\t\t\t\t\t\t<p className = \"lead\">Sorry the page does not exist! </p>\r\n\t\t\t\t\t\t\t<p>Click <Link to=\"/\"> here </Link>to redirect to main page</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t  \t\t    </div>\r\n\r\n\t\t  \t\t    <div className=\"col-sm-2\">\r\n\t\t  \t\t    </div>\r\n\t  \t\t    </div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default NotFound; \r\n","import React, { Component } from 'react';\r\nimport {BrowserRouter as Router, Route,Switch} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\n\r\nimport store from './store'\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n// components \r\nimport Header from './components/design/Header';\r\nimport Body from './components/design/Body';\r\nimport Add from './components/components/Add';\r\nimport NotFound from './components/design/NotFound';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store = {store}>\r\n    \t\t<Router>\r\n          <div className=\"App\">\r\n              <Header />\r\n            <Switch>\r\n              <Route exact path = \"/\" component = {Body} />\r\n              <Route exact path = \"/add\" component = {Add} />\r\n              <Route component = {NotFound} />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}